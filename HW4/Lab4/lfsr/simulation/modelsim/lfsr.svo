// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 19.1.0 Build 670 09/22/2019 SJ Lite Edition"

// DATE "02/04/2022 00:05:43"

// 
// Device: Altera EP2AGX45DF29I5 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (SystemVerilog) only
// 

`timescale 1 ps/ 1 ps

module lfsr (
	clk,
	reset,
	load_seed,
	seed_data,
	lfsr_done,
	lfsr_data);
input 	logic clk ;
input 	logic reset ;
input 	logic load_seed ;
input 	logic [3:0] seed_data ;
output 	logic lfsr_done ;
output 	logic [3:0] lfsr_data ;

// Design Ports Information
// lfsr_done	=>  Location: PIN_AH11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_data[0]	=>  Location: PIN_Y14,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_data[1]	=>  Location: PIN_AH8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_data[2]	=>  Location: PIN_AH10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_data[3]	=>  Location: PIN_AG9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// load_seed	=>  Location: PIN_Y13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seed_data[2]	=>  Location: PIN_AG12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_AE15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_AF15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seed_data[3]	=>  Location: PIN_AH14,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seed_data[0]	=>  Location: PIN_AH13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seed_data[1]	=>  Location: PIN_AH12,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \lfsr_done~output_o ;
wire \lfsr_data[0]~output_o ;
wire \lfsr_data[1]~output_o ;
wire \lfsr_data[2]~output_o ;
wire \lfsr_data[3]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \load_seed~input_o ;
wire \seed_data[0]~input_o ;
wire \seed_data[3]~input_o ;
wire \seed_data[2]~input_o ;
wire \seed_data[1]~input_o ;
wire \shift_reg~3_combout ;
wire \reset~input_o ;
wire \reset~inputclkctrl_outclk ;
wire \shift_reg~0_combout ;
wire \shift_reg~1_combout ;
wire \shift_reg~2_combout ;
wire \temp_seed_data[3]~0_combout ;
wire \Equal0~0_combout ;
wire \Equal0~1_combout ;
wire [3:0] shift_reg;
wire [3:0] temp_seed_data;


// Location: IOOBUF_X30_Y0_N67
arriaii_io_obuf \lfsr_done~output (
	.i(\Equal0~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_done~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_done~output .bus_hold = "false";
defparam \lfsr_done~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X30_Y0_N98
arriaii_io_obuf \lfsr_data[0]~output (
	.i(shift_reg[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_data[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_data[0]~output .bus_hold = "false";
defparam \lfsr_data[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X32_Y0_N98
arriaii_io_obuf \lfsr_data[1]~output (
	.i(shift_reg[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_data[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_data[1]~output .bus_hold = "false";
defparam \lfsr_data[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X30_Y0_N2
arriaii_io_obuf \lfsr_data[2]~output (
	.i(shift_reg[2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_data[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_data[2]~output .bus_hold = "false";
defparam \lfsr_data[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X32_Y0_N2
arriaii_io_obuf \lfsr_data[3]~output (
	.i(shift_reg[3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_data[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_data[3]~output .bus_hold = "false";
defparam \lfsr_data[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X26_Y0_N32
arriaii_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G7
arriaii_clkena \clk~inputclkctrl (
	.inclk(\clk~input_o ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ),
	.enaout());
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X30_Y0_N32
arriaii_io_ibuf \load_seed~input (
	.i(load_seed),
	.ibar(gnd),
	.o(\load_seed~input_o ));
// synopsys translate_off
defparam \load_seed~input .bus_hold = "false";
defparam \load_seed~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X29_Y0_N32
arriaii_io_ibuf \seed_data[0]~input (
	.i(seed_data[0]),
	.ibar(gnd),
	.o(\seed_data[0]~input_o ));
// synopsys translate_off
defparam \seed_data[0]~input .bus_hold = "false";
defparam \seed_data[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X29_Y0_N94
arriaii_io_ibuf \seed_data[3]~input (
	.i(seed_data[3]),
	.ibar(gnd),
	.o(\seed_data[3]~input_o ));
// synopsys translate_off
defparam \seed_data[3]~input .bus_hold = "false";
defparam \seed_data[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X29_Y0_N1
arriaii_io_ibuf \seed_data[2]~input (
	.i(seed_data[2]),
	.ibar(gnd),
	.o(\seed_data[2]~input_o ));
// synopsys translate_off
defparam \seed_data[2]~input .bus_hold = "false";
defparam \seed_data[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X29_Y0_N63
arriaii_io_ibuf \seed_data[1]~input (
	.i(seed_data[1]),
	.ibar(gnd),
	.o(\seed_data[1]~input_o ));
// synopsys translate_off
defparam \seed_data[1]~input .bus_hold = "false";
defparam \seed_data[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: MLABCELL_X29_Y1_N32
arriaii_lcell_comb \shift_reg~3 (
// Equation(s):
// \shift_reg~3_combout  = ( shift_reg[0] & ( (!\load_seed~input_o ) # (\seed_data[1]~input_o ) ) ) # ( !shift_reg[0] & ( (\seed_data[1]~input_o  & \load_seed~input_o ) ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(!\seed_data[1]~input_o ),
	.datad(!\load_seed~input_o ),
	.datae(gnd),
	.dataf(!shift_reg[0]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\shift_reg~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \shift_reg~3 .extended_lut = "off";
defparam \shift_reg~3 .lut_mask = 64'h000F000FFF0FFF0F;
defparam \shift_reg~3 .shared_arith = "off";
// synopsys translate_on

// Location: IOIBUF_X26_Y0_N94
arriaii_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G6
arriaii_clkena \reset~inputclkctrl (
	.inclk(\reset~input_o ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\reset~inputclkctrl_outclk ),
	.enaout());
// synopsys translate_off
defparam \reset~inputclkctrl .clock_type = "global clock";
defparam \reset~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X29_Y1_N33
dffeas \shift_reg[1] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\shift_reg~3_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(shift_reg[1]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg[1] .is_wysiwyg = "true";
defparam \shift_reg[1] .power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X29_Y1_N24
arriaii_lcell_comb \shift_reg~0 (
// Equation(s):
// \shift_reg~0_combout  = ( \load_seed~input_o  & ( shift_reg[1] & ( \seed_data[2]~input_o  ) ) ) # ( !\load_seed~input_o  & ( shift_reg[1] ) ) # ( \load_seed~input_o  & ( !shift_reg[1] & ( \seed_data[2]~input_o  ) ) )

	.dataa(gnd),
	.datab(!\seed_data[2]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(!\load_seed~input_o ),
	.dataf(!shift_reg[1]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\shift_reg~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \shift_reg~0 .extended_lut = "off";
defparam \shift_reg~0 .lut_mask = 64'h00003333FFFF3333;
defparam \shift_reg~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X29_Y1_N25
dffeas \shift_reg[2] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\shift_reg~0_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(shift_reg[2]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg[2] .is_wysiwyg = "true";
defparam \shift_reg[2] .power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X29_Y1_N30
arriaii_lcell_comb \shift_reg~1 (
// Equation(s):
// \shift_reg~1_combout  = ( shift_reg[2] & ( (!\load_seed~input_o ) # (\seed_data[3]~input_o ) ) ) # ( !shift_reg[2] & ( (\seed_data[3]~input_o  & \load_seed~input_o ) ) )

	.dataa(gnd),
	.datab(!\seed_data[3]~input_o ),
	.datac(gnd),
	.datad(!\load_seed~input_o ),
	.datae(gnd),
	.dataf(!shift_reg[2]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\shift_reg~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \shift_reg~1 .extended_lut = "off";
defparam \shift_reg~1 .lut_mask = 64'h00330033FF33FF33;
defparam \shift_reg~1 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X29_Y1_N31
dffeas \shift_reg[3] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\shift_reg~1_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(shift_reg[3]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg[3] .is_wysiwyg = "true";
defparam \shift_reg[3] .power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X29_Y1_N38
arriaii_lcell_comb \shift_reg~2 (
// Equation(s):
// \shift_reg~2_combout  = ( shift_reg[3] & ( shift_reg[2] & ( (\load_seed~input_o  & \seed_data[0]~input_o ) ) ) ) # ( !shift_reg[3] & ( shift_reg[2] & ( (!\load_seed~input_o ) # (\seed_data[0]~input_o ) ) ) ) # ( shift_reg[3] & ( !shift_reg[2] & ( 
// (!\load_seed~input_o ) # (\seed_data[0]~input_o ) ) ) ) # ( !shift_reg[3] & ( !shift_reg[2] & ( (\load_seed~input_o  & \seed_data[0]~input_o ) ) ) )

	.dataa(gnd),
	.datab(!\load_seed~input_o ),
	.datac(gnd),
	.datad(!\seed_data[0]~input_o ),
	.datae(!shift_reg[3]),
	.dataf(!shift_reg[2]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\shift_reg~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \shift_reg~2 .extended_lut = "off";
defparam \shift_reg~2 .lut_mask = 64'h0033CCFFCCFF0033;
defparam \shift_reg~2 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X29_Y1_N39
dffeas \shift_reg[0] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\shift_reg~2_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(shift_reg[0]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg[0] .is_wysiwyg = "true";
defparam \shift_reg[0] .power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X29_Y1_N18
arriaii_lcell_comb \temp_seed_data[3]~0 (
// Equation(s):
// \temp_seed_data[3]~0_combout  = ( \load_seed~input_o  & ( \reset~input_o  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\reset~input_o ),
	.datae(!\load_seed~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\temp_seed_data[3]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \temp_seed_data[3]~0 .extended_lut = "off";
defparam \temp_seed_data[3]~0 .lut_mask = 64'h000000FF000000FF;
defparam \temp_seed_data[3]~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X29_Y1_N29
dffeas \temp_seed_data[1] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(gnd),
	.asdata(\seed_data[1]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\temp_seed_data[3]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(temp_seed_data[1]),
	.prn(vcc));
// synopsys translate_off
defparam \temp_seed_data[1] .is_wysiwyg = "true";
defparam \temp_seed_data[1] .power_up = "low";
// synopsys translate_on

// Location: FF_X29_Y1_N37
dffeas \temp_seed_data[0] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(gnd),
	.asdata(\seed_data[0]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\temp_seed_data[3]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(temp_seed_data[0]),
	.prn(vcc));
// synopsys translate_off
defparam \temp_seed_data[0] .is_wysiwyg = "true";
defparam \temp_seed_data[0] .power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X29_Y1_N28
arriaii_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = ( temp_seed_data[0] & ( (shift_reg[0] & (!shift_reg[1] $ (temp_seed_data[1]))) ) ) # ( !temp_seed_data[0] & ( (!shift_reg[0] & (!shift_reg[1] $ (temp_seed_data[1]))) ) )

	.dataa(!shift_reg[0]),
	.datab(gnd),
	.datac(!shift_reg[1]),
	.datad(!temp_seed_data[1]),
	.datae(gnd),
	.dataf(!temp_seed_data[0]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~0 .extended_lut = "off";
defparam \Equal0~0 .lut_mask = 64'hA00AA00A50055005;
defparam \Equal0~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X29_Y1_N27
dffeas \temp_seed_data[2] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(gnd),
	.asdata(\seed_data[2]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\temp_seed_data[3]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(temp_seed_data[2]),
	.prn(vcc));
// synopsys translate_off
defparam \temp_seed_data[2] .is_wysiwyg = "true";
defparam \temp_seed_data[2] .power_up = "low";
// synopsys translate_on

// Location: FF_X29_Y1_N35
dffeas \temp_seed_data[3] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(gnd),
	.asdata(\seed_data[3]~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\temp_seed_data[3]~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(temp_seed_data[3]),
	.prn(vcc));
// synopsys translate_off
defparam \temp_seed_data[3] .is_wysiwyg = "true";
defparam \temp_seed_data[3] .power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X29_Y1_N34
arriaii_lcell_comb \Equal0~1 (
// Equation(s):
// \Equal0~1_combout  = ( shift_reg[2] & ( (\Equal0~0_combout  & (temp_seed_data[2] & (!shift_reg[3] $ (temp_seed_data[3])))) ) ) # ( !shift_reg[2] & ( (\Equal0~0_combout  & (!temp_seed_data[2] & (!shift_reg[3] $ (temp_seed_data[3])))) ) )

	.dataa(!\Equal0~0_combout ),
	.datab(!shift_reg[3]),
	.datac(!temp_seed_data[2]),
	.datad(!temp_seed_data[3]),
	.datae(gnd),
	.dataf(!shift_reg[2]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~1 .extended_lut = "off";
defparam \Equal0~1 .lut_mask = 64'h4010401004010401;
defparam \Equal0~1 .shared_arith = "off";
// synopsys translate_on

assign lfsr_done = \lfsr_done~output_o ;

assign lfsr_data[0] = \lfsr_data[0]~output_o ;

assign lfsr_data[1] = \lfsr_data[1]~output_o ;

assign lfsr_data[2] = \lfsr_data[2]~output_o ;

assign lfsr_data[3] = \lfsr_data[3]~output_o ;

endmodule
