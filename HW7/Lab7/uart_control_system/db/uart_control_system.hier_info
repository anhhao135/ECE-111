|uart_control_system
clock => clock.IN4
rstn => rstn.IN4
mem_write_addr[0] << uart_rx_control:rx_control_fsm.mem_write_addr
mem_write_addr[1] << uart_rx_control:rx_control_fsm.mem_write_addr
mem_write_addr[2] << uart_rx_control:rx_control_fsm.mem_write_addr
mem_write_addr[3] << uart_rx_control:rx_control_fsm.mem_write_addr
mem_write_data[0] << uart_rx_control:rx_control_fsm.mem_write_data
mem_write_data[1] << uart_rx_control:rx_control_fsm.mem_write_data
mem_write_data[2] << uart_rx_control:rx_control_fsm.mem_write_data
mem_write_data[3] << uart_rx_control:rx_control_fsm.mem_write_data
mem_write_data[4] << uart_rx_control:rx_control_fsm.mem_write_data
mem_write_data[5] << uart_rx_control:rx_control_fsm.mem_write_data
mem_write_data[6] << uart_rx_control:rx_control_fsm.mem_write_data
mem_write_data[7] << uart_rx_control:rx_control_fsm.mem_write_data
mem_write_enable << uart_rx_control:rx_control_fsm.mem_write_enable
mem_read_data[0] => mem_read_data[0].IN1
mem_read_data[1] => mem_read_data[1].IN1
mem_read_data[2] => mem_read_data[2].IN1
mem_read_data[3] => mem_read_data[3].IN1
mem_read_data[4] => mem_read_data[4].IN1
mem_read_data[5] => mem_read_data[5].IN1
mem_read_data[6] => mem_read_data[6].IN1
mem_read_data[7] => mem_read_data[7].IN1
mem_read_addr[0] << uart_tx_control:tx_control_fsm.mem_read_addr
mem_read_addr[1] << uart_tx_control:tx_control_fsm.mem_read_addr
mem_read_addr[2] << uart_tx_control:tx_control_fsm.mem_read_addr
mem_read_addr[3] << uart_tx_control:tx_control_fsm.mem_read_addr
mem_read_enable << uart_tx_control:tx_control_fsm.mem_read_enable
transmission_done << uart_tx_control:tx_control_fsm.transmission_done
message_received << uart_rx_control:rx_control_fsm.message_received


|uart_control_system|uart_tx_control:tx_control_fsm
clk => j[0].CLK
clk => j[1].CLK
clk => j[2].CLK
clk => j[3].CLK
clk => j[4].CLK
clk => j[5].CLK
clk => j[6].CLK
clk => j[7].CLK
clk => j[8].CLK
clk => j[9].CLK
clk => j[10].CLK
clk => j[11].CLK
clk => j[12].CLK
clk => j[13].CLK
clk => j[14].CLK
clk => j[15].CLK
clk => j[16].CLK
clk => j[17].CLK
clk => j[18].CLK
clk => j[19].CLK
clk => j[20].CLK
clk => j[21].CLK
clk => j[22].CLK
clk => j[23].CLK
clk => j[24].CLK
clk => j[25].CLK
clk => j[26].CLK
clk => j[27].CLK
clk => j[28].CLK
clk => j[29].CLK
clk => j[30].CLK
clk => j[31].CLK
clk => uart_tx_start~reg0.CLK
clk => uart_tx_data[0]~reg0.CLK
clk => uart_tx_data[1]~reg0.CLK
clk => uart_tx_data[2]~reg0.CLK
clk => uart_tx_data[3]~reg0.CLK
clk => uart_tx_data[4]~reg0.CLK
clk => uart_tx_data[5]~reg0.CLK
clk => uart_tx_data[6]~reg0.CLK
clk => uart_tx_data[7]~reg0.CLK
clk => transmission_done~reg0.CLK
clk => mem_read_enable~reg0.CLK
clk => mem_read_addr[0]~reg0.CLK
clk => mem_read_addr[1]~reg0.CLK
clk => mem_read_addr[2]~reg0.CLK
clk => mem_read_addr[3]~reg0.CLK
clk => state~1.DATAIN
rstn => mem_read_addr.OUTPUTSELECT
rstn => mem_read_addr.OUTPUTSELECT
rstn => mem_read_addr.OUTPUTSELECT
rstn => mem_read_addr.OUTPUTSELECT
rstn => mem_read_enable.OUTPUTSELECT
rstn => transmission_done.OUTPUTSELECT
rstn => uart_tx_data.OUTPUTSELECT
rstn => uart_tx_data.OUTPUTSELECT
rstn => uart_tx_data.OUTPUTSELECT
rstn => uart_tx_data.OUTPUTSELECT
rstn => uart_tx_data.OUTPUTSELECT
rstn => uart_tx_data.OUTPUTSELECT
rstn => uart_tx_data.OUTPUTSELECT
rstn => uart_tx_data.OUTPUTSELECT
rstn => uart_tx_start.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
mem_read_data[0] => Selector13.IN3
mem_read_data[1] => Selector12.IN3
mem_read_data[2] => Selector11.IN3
mem_read_data[3] => Selector10.IN3
mem_read_data[4] => Selector9.IN3
mem_read_data[5] => Selector8.IN3
mem_read_data[6] => Selector7.IN3
mem_read_data[7] => Selector6.IN3
mem_read_addr[0] <= mem_read_addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_read_addr[1] <= mem_read_addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_read_addr[2] <= mem_read_addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_read_addr[3] <= mem_read_addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_read_enable <= mem_read_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
transmission_done <= transmission_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => j.OUTPUTSELECT
uart_tx_done => Selector15.IN3
uart_tx_done => Selector16.IN2
uart_tx_data[0] <= uart_tx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[1] <= uart_tx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[2] <= uart_tx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[3] <= uart_tx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[4] <= uart_tx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[5] <= uart_tx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[6] <= uart_tx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_data[7] <= uart_tx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_start <= uart_tx_start~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_control_system|uart_rx_control:rx_control_fsm
clk => received_data[0].CLK
clk => received_data[1].CLK
clk => received_data[2].CLK
clk => received_data[3].CLK
clk => received_data[4].CLK
clk => received_data[5].CLK
clk => received_data[6].CLK
clk => received_data[7].CLK
clk => j[0].CLK
clk => j[1].CLK
clk => j[2].CLK
clk => j[3].CLK
clk => j[4].CLK
clk => j[5].CLK
clk => j[6].CLK
clk => j[7].CLK
clk => j[8].CLK
clk => j[9].CLK
clk => j[10].CLK
clk => j[11].CLK
clk => j[12].CLK
clk => j[13].CLK
clk => j[14].CLK
clk => j[15].CLK
clk => j[16].CLK
clk => j[17].CLK
clk => j[18].CLK
clk => j[19].CLK
clk => j[20].CLK
clk => j[21].CLK
clk => j[22].CLK
clk => j[23].CLK
clk => j[24].CLK
clk => j[25].CLK
clk => j[26].CLK
clk => j[27].CLK
clk => j[28].CLK
clk => j[29].CLK
clk => j[30].CLK
clk => j[31].CLK
clk => message_received~reg0.CLK
clk => mem_write_enable~reg0.CLK
clk => mem_write_data[0]~reg0.CLK
clk => mem_write_data[1]~reg0.CLK
clk => mem_write_data[2]~reg0.CLK
clk => mem_write_data[3]~reg0.CLK
clk => mem_write_data[4]~reg0.CLK
clk => mem_write_data[5]~reg0.CLK
clk => mem_write_data[6]~reg0.CLK
clk => mem_write_data[7]~reg0.CLK
clk => mem_write_addr[0]~reg0.CLK
clk => mem_write_addr[1]~reg0.CLK
clk => mem_write_addr[2]~reg0.CLK
clk => mem_write_addr[3]~reg0.CLK
clk => state~1.DATAIN
rstn => mem_write_addr.OUTPUTSELECT
rstn => mem_write_addr.OUTPUTSELECT
rstn => mem_write_addr.OUTPUTSELECT
rstn => mem_write_addr.OUTPUTSELECT
rstn => mem_write_data.OUTPUTSELECT
rstn => mem_write_data.OUTPUTSELECT
rstn => mem_write_data.OUTPUTSELECT
rstn => mem_write_data.OUTPUTSELECT
rstn => mem_write_data.OUTPUTSELECT
rstn => mem_write_data.OUTPUTSELECT
rstn => mem_write_data.OUTPUTSELECT
rstn => mem_write_data.OUTPUTSELECT
rstn => mem_write_enable.OUTPUTSELECT
rstn => message_received.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => j.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => received_data[1].ENA
rstn => received_data[0].ENA
rstn => received_data[2].ENA
rstn => received_data[3].ENA
rstn => received_data[4].ENA
rstn => received_data[5].ENA
rstn => received_data[6].ENA
rstn => received_data[7].ENA
mem_write_data[0] <= mem_write_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_data[1] <= mem_write_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_data[2] <= mem_write_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_data[3] <= mem_write_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_data[4] <= mem_write_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_data[5] <= mem_write_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_data[6] <= mem_write_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_data[7] <= mem_write_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_addr[0] <= mem_write_addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_addr[1] <= mem_write_addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_addr[2] <= mem_write_addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_addr[3] <= mem_write_addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_write_enable <= mem_write_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_done => received_data.OUTPUTSELECT
uart_rx_done => received_data.OUTPUTSELECT
uart_rx_done => received_data.OUTPUTSELECT
uart_rx_done => received_data.OUTPUTSELECT
uart_rx_done => received_data.OUTPUTSELECT
uart_rx_done => received_data.OUTPUTSELECT
uart_rx_done => received_data.OUTPUTSELECT
uart_rx_done => received_data.OUTPUTSELECT
uart_rx_done => state.DATAB
uart_rx_done => state.DATAB
uart_rx_data[0] => received_data.DATAA
uart_rx_data[1] => received_data.DATAA
uart_rx_data[2] => received_data.DATAA
uart_rx_data[3] => received_data.DATAA
uart_rx_data[4] => received_data.DATAA
uart_rx_data[5] => received_data.DATAA
uart_rx_data[6] => received_data.DATAA
uart_rx_data[7] => received_data.DATAA
message_received <= message_received~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_control_system|uart_top:uart_top_inst
tx_clk => tx_clk.IN1
tx_rstn => tx_rstn.IN1
rx_clk => rx_clk.IN1
rx_rstn => rx_rstn.IN1
tx_din[0] => tx_din[0].IN1
tx_din[1] => tx_din[1].IN1
tx_din[2] => tx_din[2].IN1
tx_din[3] => tx_din[3].IN1
tx_din[4] => tx_din[4].IN1
tx_din[5] => tx_din[5].IN1
tx_din[6] => tx_din[6].IN1
tx_din[7] => tx_din[7].IN1
tx_start => tx_start.IN1
tx_done <= uart_tx:uart_tx_inst.done
rx_done <= uart_rx:uart_rx_inst.done
rx_dout[0] <= uart_rx:uart_rx_inst.dout
rx_dout[1] <= uart_rx:uart_rx_inst.dout
rx_dout[2] <= uart_rx:uart_rx_inst.dout
rx_dout[3] <= uart_rx:uart_rx_inst.dout
rx_dout[4] <= uart_rx:uart_rx_inst.dout
rx_dout[5] <= uart_rx:uart_rx_inst.dout
rx_dout[6] <= uart_rx:uart_rx_inst.dout
rx_dout[7] <= uart_rx:uart_rx_inst.dout


|uart_control_system|uart_top:uart_top_inst|uart_tx:uart_tx_inst
clk => done~reg0.CLK
clk => tx~reg0.CLK
clk => tx~en.CLK
clk => bit_index[0].CLK
clk => bit_index[1].CLK
clk => bit_index[2].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => state~1.DATAIN
rstn => always0.IN0
rstn => count.OUTPUTSELECT
rstn => count.OUTPUTSELECT
rstn => count.OUTPUTSELECT
rstn => count.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => bit_index.OUTPUTSELECT
rstn => bit_index.OUTPUTSELECT
rstn => bit_index.OUTPUTSELECT
rstn => done.OUTPUTSELECT
rstn => tx.IN0
rstn => tx~en.DATAIN
din[0] => Mux0.IN7
din[1] => Mux0.IN6
din[2] => Mux0.IN5
din[3] => Mux0.IN4
din[4] => Mux0.IN3
din[5] => Mux0.IN2
din[6] => Mux0.IN1
din[7] => Mux0.IN0
start => always0.IN1
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx <= tx.DB_MAX_OUTPUT_PORT_TYPE


|uart_control_system|uart_top:uart_top_inst|uart_rx:uart_rx_inst
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => done~reg0.CLK
clk => state~12.DATAIN
rstn => done.OUTPUTSELECT
rstn => count.OUTPUTSELECT
rstn => count.OUTPUTSELECT
rstn => count.OUTPUTSELECT
rstn => count.OUTPUTSELECT
rstn => dout.OUTPUTSELECT
rstn => dout.OUTPUTSELECT
rstn => dout.OUTPUTSELECT
rstn => dout.OUTPUTSELECT
rstn => dout.OUTPUTSELECT
rstn => dout.OUTPUTSELECT
rstn => dout.OUTPUTSELECT
rstn => dout.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rstn => state.OUTPUTSELECT
rx => dout.DATAB
rx => dout.DATAB
rx => dout.DATAB
rx => dout.DATAB
rx => dout.DATAB
rx => dout.DATAB
rx => dout.DATAB
rx => dout.DATAB
rx => Selector13.IN10
rx => always0.IN1
rx => Selector14.IN0
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


